name: "Push to FTP"
description: "Push built source to FTP"
inputs:
  source:
    description: "Source directory"
    required: false
    default: 'source'
  built:
    description: "Previous build directory (needs to be repo and have a remote)"
    required: false
    default: 'built'
  env-type:
    description: "Env Type"
    required: false
    default: 'sftp'
  env-host:
    description: "Env Host"
    required: true
    default: ''
  env-port:
    description: "Env Port"
    required: true
    default: ''
  env-user:
    description: "Env User"
    required: true
    default: ''
  env-pass:
    description: "Env Password"
    required: true
    default: ''
  env-remote-root:
    description: "Env Remote Root"
    required: true
    default: ''
  force-ignore:
    description: "Force ignore files"
    required: false
    default: |
      /auth.json
      /vendor/*
      !/vendor/composer
      /vendor/composer/*
      !/vendor/composer/installers
      !/vendor/composer/installed.json
  ftp-ignore:
    description: "Force ignore files"
    required: false
    default: |
      /vendor/**
      /auth.json
      /composer.json
      /composer.lock
  full-deployment:
    description: "Force full deployment"
    required: false
    default: "true"
    
runs:
  using: "composite"
  steps:
    - name: Set message
      uses: saucal/action-slack-notification@main
      with:
        status: "Preparing built assets :large_yellow_circle:"

    - name: Build To GIT
      id: 'build-to-git'
      uses: saucal/action-build-to-git@main
      with:
        from: ${{ inputs.source }}
        path: ${{ inputs.built }}
        defer-push: "true"
        force-ignore: ${{ inputs.force-ignore }}

    - name: Set message
      uses: saucal/action-slack-notification@main
      with:
        status: "Pushing to FTP :large_yellow_circle:"

    - name: Define manifest to use
      id: manifest-load
      shell: bash
      run: |
        {
          if [ "${{ inputs.full-deployment }}" == "true" ]; then
            echo 'manifest<<EOF_MANIFEST'
            echo "${{ steps.build-to-git.outputs.manifest-full }}"
            echo 'EOF_MANIFEST'
          else
            echo 'manifest<<EOF_MANIFEST'
            echo "${{ steps.build-to-git.outputs.manifest }}"
            echo 'EOF_MANIFEST'
          fi
        } >> $GITHUB_OUTPUT
        

    - name: Deploy to FTP
      if: "${{ steps.manifest-load.outputs.manifest != '' }}"
      id: 'deploy-to-ftp'
      uses: saucal/action-deploy-ftp@main
      with:
        manifest: "${{ steps.manifest-load.outputs.manifest }}"
        env-type: ${{ inputs.env-type }}
        env-host: ${{ inputs.env-host }}
        env-port: ${{ inputs.env-port }}
        env-user: ${{ inputs.env-user }}
        env-pass: ${{ inputs.env-pass }}
        env-local-root: ${{ inputs.built }}
        env-remote-root: ${{ inputs.env-remote-root }}
        force-ignore: ${{ inputs.ftp-ignore }}

    - name: Set message
      uses: saucal/action-slack-notification@main
      with:
        status: "Pushing to GIT :large_yellow_circle:"

    - name: Push to GIT
      id: 'push-to-git'
      uses: saucal/action-build-to-git@main
      with:
        path: ${{ inputs.built }}
        do-push: "true"
